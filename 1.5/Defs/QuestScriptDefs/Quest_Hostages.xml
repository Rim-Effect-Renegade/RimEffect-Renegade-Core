<?xml version="1.0" encoding="utf-8"?>
<Defs>

	<QuestScriptDef>
		<defName>RE_RescueHostages</defName>
		<rootSelectionWeight>1.0</rootSelectionWeight>
		<rootMinPoints>350</rootMinPoints>
		<canGiveRoyalFavor>true</canGiveRoyalFavor>
		<expireDaysRange>2~3</expireDaysRange>
		<questNameRules>
			<rulesStrings>
				<li>questName->[hostages] in need</li>
				<li>questName->[adjective] [hostages]</li>
				<li>questName->[hostages] in trouble</li>
				<li>hostages->Hostages</li>
				<li>hostages->Captives</li>
				<li>adjective->Poor</li>
				<li>adjective->Desperate</li>
				<li>adjective->Scared</li>
			</rulesStrings>
		</questNameRules>
		<questDescriptionRules>
			<rulesStrings>
				<li>questDescription->[asker_nameDef], [asker_faction_leaderTitle] of [asker_faction_name], says [asker_possessive] people are being held hostage near [map_definite].
					\n[asker_nameDef] has nobody to spare to rescue them, but says that if you can make it to their position and rescue them, as well as kill the captors, you will be rewarded.
					\n[asker_nameDef] says that hostages are being held by [siteFaction_pawnsPlural] from [siteFaction_name].</li>
			</rulesStrings>
		</questDescriptionRules>
		<root Class="QuestNode_Sequence">
			<nodes>
				<li Class="QuestNode_SubScript">
					<def>Util_RandomizePointsChallengeRating</def>
					<parms>
						<pointsFactorTwoStar>1.5</pointsFactorTwoStar>
						<pointsFactorThreeStar>2</pointsFactorThreeStar>
					</parms>
				</li>
				<li Class="QuestNode_SubScript">
					<def>Util_AdjustPointsForDistantFight</def>
				</li>
				<li Class="QuestNode_GetMap" />

				<li Class="QuestNode_GetPawn">
					<storeAs>asker</storeAs>
					<mustBeFactionLeader>true</mustBeFactionLeader>
					<allowPermanentEnemyFaction>false</allowPermanentEnemyFaction>
					<hostileWeight>0.15</hostileWeight>
				</li>

				<li Class="QuestNode_GetSiteTile">
					<storeAs>siteTile</storeAs>
					<preferCloserTiles>true</preferCloserTiles>
				</li>

				<li Class="QuestNode_GetSitePartDefsByTagsAndFaction">
					<storeAs>sitePartDefs</storeAs>
					<storeFactionAs>siteFaction</storeFactionAs>
					<sitePartsTags>
						<li>
							<tag>RE_HostagesSite</tag>
						</li>
						<li>
							<tag>KCSG_EnnemiesPresence</tag>
						</li>
					</sitePartsTags>
					<mustBeHostileToFactionOf>$asker</mustBeHostileToFactionOf>
				</li>

				<li Class="QuestNode_GetDefaultSitePartsParams">
					<tile>$siteTile</tile>
					<faction>$siteFaction</faction>
					<sitePartDefs>$sitePartDefs</sitePartDefs>
					<storeSitePartsParamsAs>sitePartsParams</storeSitePartsParamsAs>
				</li>

				<li Class="QuestNode_GetSiteThreatPoints">
					<storeAs>sitePoints</storeAs>
					<sitePartsParams>$sitePartsParams</sitePartsParams>
				</li>
				<li Class="QuestNode_SubScript">
					<def>Util_GetDefaultRewardValueFromPoints</def>
					<parms>
						<!-- Use the actual threat points generated (some site parts define a minimum threshold) -->
						<points>$sitePoints</points>
					</parms>
				</li>

				<!-- Inflate reward value. Since we're basing the reward value on the threat points generated, we need to do this
             even though the threat points was deflated from the input points already. -->
				<li Class="QuestNode_Multiply">
					<value1>$rewardValue</value1>
					<value2>1.75</value2>
					<storeAs>rewardValue</storeAs>
				</li>

				<li Class="QuestNode_SubScript">
					<def>Util_GenerateSite</def>
				</li>

				<li Class="QuestNode_SpawnWorldObjects">
					<worldObjects>$site</worldObjects>
				</li>

				<li Class="QuestNode_WorldObjectTimeout">
					<worldObject>$site</worldObject>
					<isQuestTimeout>true</isQuestTimeout>
					<delayTicks>$(randInt(12,28)*60000)</delayTicks>
					<inSignalDisable>site.MapGenerated</inSignalDisable>
					<node Class="QuestNode_Sequence">
						<nodes>
							<li Class="QuestNode_Letter">
								<label TKey="LetterLabelQuestExpired">Quest expired: [resolvedQuestName]</label>
								<text TKey="LetterTextQuestExpired">The hostages camp has packed up and moved on. The quest [resolvedQuestName] has expired.</text>
							</li>
							<li Class="QuestNode_End">
								<outcome>Fail</outcome>
							</li>
						</nodes>
					</node>
				</li>

				<!-- If we enter and leave, the map is destroyed. Fail the quest. -->
				<li Class="QuestNode_Signal">
					<inSignal>site.Destroyed</inSignal>
					<node Class="QuestNode_Sequence">
						<nodes>
							<li Class="QuestNode_Letter">
								<label TKey="LetterLabelQuestFailed">Quest failed: [resolvedQuestName]</label>
								<text TKey="LetterTextQuestFailed">After being discovered, the hostages camp has dispersed. The quest [resolvedQuestName] has ended.</text>
							</li>
							<li Class="QuestNode_End">
								<outcome>Fail</outcome>
							</li>
						</nodes>
					</node>
				</li>

				<li Class="QuestNode_Signal">
					<inSignal>AllHostagesAreFree</inSignal>
					<node Class="QuestNode_GiveRewards">
						<parms>
							<allowGoodwill>true</allowGoodwill>
							<allowRoyalFavor>true</allowRoyalFavor>
							<chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
						</parms>
						<addCampLootReward>true</addCampLootReward>
						<customLetterLabel TKey="LetterLabelPaymentArrived">Payment arrived</customLetterLabel>
						<customLetterText TKey="LetterTextPaymentArrived">You have defeated enemies at the camp and freed the hostages!\n\nThe payment from [asker_faction_name] has arrived.</customLetterText>
						<nodeIfChosenPawnSignalUsed Class="QuestNode_Letter">
							<letterDef>ChoosePawn</letterDef>
							<label TKey="LetterLabelFavorReceiver">[asker_faction_royalFavorLabel]</label>
							<text TKey="LetterTextFavorReceiver">These colonists participated in the victory for the quest [resolvedQuestName]. [asker_definite] wants to know who should receive the [royalFavorReward_amount] [asker_faction_royalFavorLabel] for this service.</text>
							<useColonistsOnMap>$site</useColonistsOnMap>
							<chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
						</nodeIfChosenPawnSignalUsed>
					</node>
				</li>
				<li Class="QuestNode_End">
					<inSignal>AllHostagesAreFree</inSignal>
					<outcome>Success</outcome>
				</li>
			</nodes>
		</root>
	</QuestScriptDef>

</Defs>